esphome:
  name: iotdial-test
  platform: ESP8266
  board: d1_mini
  esp8266_restore_from_flash: yes

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
#api:
#  password: "IoTDial"
#https://esphome.io/components/mqtt.html - Warning

ota:
  password: "IoTDial"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Iotdial-Test Fallback Hotspot"
    password: "IoTDial!"

captive_portal:

mqtt:
  broker: mqtt.atrent.it
  topic_prefix: IoTDial/busolin
  discovery: True #homeassistant


globals:
  - id: min_value
    type: float
    restore_value: yes
    initial_value: '0'

  - id: max_value
    type: float
    restore_value: yes
    initial_value: '40'

  - id: min_pwm
    type: float
    restore_value: yes
    initial_value: '0'

  - id: max_pwm
    type: float
    restore_value: yes
    initial_value: '0.89' #percentuale!
    



sensor:
  - platform: mqtt_subscribe
    name: "Temperatura"
    id: temperatura
    topic: fuori_come_un_balcone/temp
    on_value:
      then:
        - output.set_level:
            id: dial
            level: !lambda "return (x - id(min_value)) * (id(max_pwm) - id(min_pwm)) / (id(max_value) - id(min_value)) + id(min_pwm);"
            #level: !lambda "return x/100;"

  
  - platform: mqtt_subscribe
    name: "setMinValue"
    id: setMinValue
    topic: IoTDial/busolin/settings/setMinValue
    on_value:
      then:
        - lambda: "id(min_value)=x;"

  - platform: mqtt_subscribe
    name: "setMaxValue"
    id: setMaxValue
    topic: IoTDial/busolin/settings/setMaxValue
    on_value:
      then:
        - lambda: "id(max_value)=x;"

  - platform: mqtt_subscribe
    name: "setMinPwm"
    id: setMinPwm
    topic: IoTDial/busolin/settings/setMinPwm
    on_value:
      then:
        - lambda: "id(min_pwm)=x;"

  - platform: mqtt_subscribe
    name: "setMaxPwm"
    id: setMaxPwm
    topic: IoTDial/busolin/settings/setMaxPwm
    on_value:
      then:
        - lambda: "id(max_pwm)=x;"
    


# METER D2
output:
  - platform: esp8266_pwm
    pin: D2
    #frequency: 1000 Hz
    id: dial